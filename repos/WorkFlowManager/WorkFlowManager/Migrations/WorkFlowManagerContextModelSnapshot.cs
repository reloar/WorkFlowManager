// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkFlowManager.Data;

namespace WorkFlowManager.Migrations
{
    [DbContext(typeof(WorkFlowManagerContext))]
    partial class WorkFlowManagerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WorkFlowManager.Models.Answer", b =>
                {
                    b.Property<int>("AnswerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnswerText");

                    b.Property<int>("QuestionId");

                    b.HasKey("AnswerId");

                    b.HasIndex("QuestionId")
                        .IsUnique();

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("WorkFlowManager.Models.Choice", b =>
                {
                    b.Property<int>("CHoiceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChoiceText");

                    b.Property<int>("QuestionId");

                    b.HasKey("CHoiceId");

                    b.HasIndex("QuestionId")
                        .IsUnique();

                    b.ToTable("Choice");
                });

            modelBuilder.Entity("WorkFlowManager.Models.Courses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseCode");

                    b.Property<string>("CourseDescription");

                    b.Property<int>("CourseUnit");

                    b.Property<int>("CoursesId");

                    b.Property<int>("LecturerId");

                    b.Property<int?>("QuestionsId");

                    b.Property<int>("StudentId");

                    b.HasKey("Id");

                    b.HasIndex("LecturerId");

                    b.HasIndex("QuestionsId");

                    b.HasIndex("StudentId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("WorkFlowManager.Models.Lecturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LecturerImage");

                    b.Property<string>("LecturerName");

                    b.Property<string>("Position");

                    b.HasKey("Id");

                    b.ToTable("Lecturers");
                });

            modelBuilder.Entity("WorkFlowManager.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Course");

                    b.Property<int>("CourseId");

                    b.Property<int>("QuestionId");

                    b.Property<string>("QuestionText");

                    b.HasKey("Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("WorkFlowManager.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LecturerId");

                    b.Property<string>("MatricNumber");

                    b.Property<string>("StudentName");

                    b.HasKey("Id");

                    b.HasIndex("LecturerId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("WorkFlowManager.Models.Answer", b =>
                {
                    b.HasOne("WorkFlowManager.Models.Question", "Question")
                        .WithOne("Answers")
                        .HasForeignKey("WorkFlowManager.Models.Answer", "QuestionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WorkFlowManager.Models.Choice", b =>
                {
                    b.HasOne("WorkFlowManager.Models.Question", "Question")
                        .WithOne("Choices")
                        .HasForeignKey("WorkFlowManager.Models.Choice", "QuestionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WorkFlowManager.Models.Courses", b =>
                {
                    b.HasOne("WorkFlowManager.Models.Lecturer")
                        .WithMany("Courses")
                        .HasForeignKey("LecturerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WorkFlowManager.Models.Question", "Questions")
                        .WithMany()
                        .HasForeignKey("QuestionsId");

                    b.HasOne("WorkFlowManager.Models.Student")
                        .WithMany("Courses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WorkFlowManager.Models.Student", b =>
                {
                    b.HasOne("WorkFlowManager.Models.Lecturer")
                        .WithMany("Students")
                        .HasForeignKey("LecturerId");
                });
#pragma warning restore 612, 618
        }
    }
}
